name: Update Game Cards Data

on:
  schedule:
    - cron: '0 0 * * *'  # 每天 UTC 时间 00:00 运行（北京时间 08:00）
  workflow_dispatch:      # 允许手动触发
  push:
    paths-ignore:
      - 'data/game_cards.json'
      - 'data/activity_cards.json'

jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # 获取完整历史记录
        
    - name: Clean data directory
      run: |
        # 清空data目录但保留目录结构
        if [ -d "data" ]; then
          find data -mindepth 1 -delete
          echo "已清空data目录内容"
        else
          mkdir -p data
          echo "创建空data目录"
        fi
        
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    - name: Install Chrome browser
      uses: browser-actions/setup-chrome@v1
      with:
        chrome-version: stable
        
    - name: Install Python packages
      run: pip install -r requirements.txt
        
    - name: Run game cards scraper
      run: python scraper.py
      
    - name: Run activity cards scraper
      run: python activity.py
      
    - name: Verify files exist
      run: |
        if [ ! -f "data/game_cards.json" ]; then
          echo '{"error": "game_cards.json not generated"}' > data/game_cards.json
        fi
        if [ ! -f "data/activity_cards.json" ]; then
          echo '{"error": "activity_cards.json not generated"}' > data/activity_cards.json
        fi
        echo "数据文件验证完成"
        
    - name: Commit and push changes
      uses: actions/github-script@v6
      with:
        script: |
          const { execSync } = require('child_process');
          const fs = require('fs');
          
          // 获取分支信息
          const branchRef = process.env.GITHUB_REF;
          const branchName = branchRef.replace('refs/heads/', '');
          
          // 配置 Git 用户
          execSync('git config --global user.name "GitHub Actions"');
          execSync('git config --global user.email "actions@users.noreply.github.com"');
          
          // 添加数据文件
          execSync('git add data/');
          
          // 检查是否有更改
          const status = execSync('git status --porcelain').toString().trim();
          if (!status) {
            console.log('没有需要提交的更改');
            return;
          }
          
          // 提交更改（北京时间）
          const commitMessage = `自动更新数据: ${new Date().toLocaleString('zh-CN', { 
            timeZone: 'Asia/Shanghai',
            year: 'numeric',
            month: '2-digit',
            day: '2-digit',
            hour: '2-digit',
            minute: '2-digit'
          })}`;
          
          execSync(`git commit -m "${commitMessage}"`);
          
          // 简化推送逻辑（直接强制推送）
          try {
            console.log('强制推送更新...');
            execSync(`git push origin HEAD:${branchName} --force`);
            console.log('推送成功');
          } catch (error) {
            console.error('推送失败:', error);
            core.setFailed('推送更新失败');
          }

    - name: Push to Gitee Mirror
      env:
        GITEE_TOKEN: ${{ secrets.GITEE_TOKEN }}
        GITEE_USERNAME: zisekongling
        GITEE_REPO: blue_archive_jp
      run: |
        # 添加 Gitee 远程仓库
        git remote add gitee https://$GITEE_USERNAME:$GITEE_TOKEN@gitee.com/$GITEE_USERNAME/$GITEE_REPO.git || true
        
        # 获取当前分支名
        branch_name=${GITHUB_REF#refs/heads/}
        
        # 直接强制推送到 Gitee
        echo "强制推送到 Gitee 镜像仓库..."
        git push gitee HEAD:$branch_name --force
        echo "镜像同步完成"
